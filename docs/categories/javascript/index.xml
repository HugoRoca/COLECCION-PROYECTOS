<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JavaScript on Hugo Roca Proyectos</title>
    <link>https://hugorocaproyectos.js.org/categories/javascript/</link>
    <description>Recent content in JavaScript on Hugo Roca Proyectos</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-PE</language>
    <lastBuildDate>Mon, 15 Apr 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://hugorocaproyectos.js.org/categories/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Handlebars | Parte 2</title>
      <link>https://hugorocaproyectos.js.org/handlebars-parte-2/</link>
      <pubDate>Mon, 15 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hugorocaproyectos.js.org/handlebars-parte-2/</guid>
      <description>Continuando con handlebars, esta vez construiremos plantillas mas avanzadas usando condiciones, bucles, with, variables de datos, helpers y partials.
 Contenido:
 Condiciones Bucles Propiedades anidadas Variables de datos FIRTS y LAST Variables de datos INDEX y KEY Variables de datos ROOT Helpers Helpers de bloque Partials  1. Condiciones &amp;lt;script id=&amp;quot;mi-plantilla&amp;quot; type=&amp;quot;text/x-handlebars-template&amp;quot;&amp;gt; &amp;lt;h1&amp;gt;¡Hola {{nick}}!&amp;lt;/h1&amp;gt; {{#if dispositivo}} &amp;lt;p&amp;gt;Te has conectado desde: {{dispositivo}}&amp;lt;/p&amp;gt; {{else}} &amp;lt;p&amp;gt;No hemos identificado desde dónde te conectas.</description>
    </item>
    
    <item>
      <title>Handlebars | Parte 1</title>
      <link>https://hugorocaproyectos.js.org/handlebars-parte-1/</link>
      <pubDate>Tue, 09 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hugorocaproyectos.js.org/handlebars-parte-1/</guid>
      <description>Handlebars.js es un motor de plantillas muy popular que es potente, fácil de utilizar y que cuenta con una gran comunidad. Se basa en el lenguaje de plantillas Mustache, pero lo mejora de distintas maneras.
 Los sistemas de plantillas son muy importantes, porque nos permiten separar el código por responsabilidades y crear la salida de las aplicaciones de una manera sencilla, manteniendo el código HTML separado del código Javascript.</description>
    </item>
    
    <item>
      <title>Javascript: Promesas</title>
      <link>https://hugorocaproyectos.js.org/javascript-promesas/</link>
      <pubDate>Wed, 03 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hugorocaproyectos.js.org/javascript-promesas/</guid>
      <description>A una promesa, como su propio nombre lo dice, es simplemente un objeto que puede o no devolver algún valor en la línea de tiempo presente y futuro. Me gusta describir una promesa como una especie de Karma: Tú haces algo, y en consecuencia obtendrás algo, ahora o en un futuro. Esto aplica igual a las promesas, tu ejecutas código asíncrono y obtienes la promesa de que obtendrás una respuesta, que puede ser en ese instante o en un futuro.</description>
    </item>
    
    <item>
      <title>Creación de un juego con JavaScript puro N° 1</title>
      <link>https://hugorocaproyectos.js.org/creaci%C3%B3n-de-un-juego-con-javascript-puro-n-1/</link>
      <pubDate>Sat, 15 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://hugorocaproyectos.js.org/creaci%C3%B3n-de-un-juego-con-javascript-puro-n-1/</guid>
      <description>En esta oportunidad crearemos un juego del clásico piedra, papel o tijeras. Utilizaremos JavaScript puro y HTML5 y CSS3 para el diseño.
 &amp;#128512; Click aquí para ver la Demo &amp;#129299; Recursos (Imagenes)  Puño Mano Tijera  Paso 1 (Estructura del diseño) Empezaremos creando el archivo index.html y codificamos lo siguiente:
&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;quot;es&amp;quot;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt; &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot;&amp;gt; &amp;lt;meta http-equiv=&amp;quot;X-UA-Compatible&amp;quot; content=&amp;quot;ie=edge&amp;quot;&amp;gt; &amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;css/style.</description>
    </item>
    
    <item>
      <title>Conexión NodeJS con Redis Cache</title>
      <link>https://hugorocaproyectos.js.org/conexi%C3%B3n-nodejs-con-redis-cache/</link>
      <pubDate>Thu, 01 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://hugorocaproyectos.js.org/conexi%C3%B3n-nodejs-con-redis-cache/</guid>
      <description>Redis se utiliza como base de datos y para caché, ya que es súper rápido debido a que los datos se almacenan &amp;ldquo;en memoria&amp;rdquo;, a diferencia de otras bases de datos en las que los datos generalmente se almacenan &amp;ldquo;en disco&amp;rdquo;.
 Redis es una gran base de datos para usar con Node.js. Tanto Redis como Node.js comparten convenciones de tipo y modelos de subprocesos similares, lo que lo convierte en una experiencia de desarrollo muy predecible.</description>
    </item>
    
    <item>
      <title>Gráficos con D3JS</title>
      <link>https://hugorocaproyectos.js.org/gr%C3%A1ficos-con-d3js/</link>
      <pubDate>Tue, 02 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://hugorocaproyectos.js.org/gr%C3%A1ficos-con-d3js/</guid>
      <description>D3.js es una biblioteca de JavaScript para manipular documentos basados ​​en datos. D3 te ayuda a dar vida a los datos usando HTML, SVG y CSS.
 El énfasis de D3 en los estándares web le brinda todas las capacidades de los navegadores modernos sin vincularse a un marco propietario, combinando poderosos componentes de visualización y un enfoque basado en datos para la manipulación de DOM.
Te dejo algunos ejemplos en GITHUB de como empezar a desarrollar gráficos con datos reales.</description>
    </item>
    
  </channel>
</rss>