<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Hugo Roca Proyectos | Blog</title>
    <link>https://hugorocaproyectos.js.org/post/</link>
    <description>Recent content in Posts on Hugo Roca Proyectos | Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-PE</language>
    <lastBuildDate>Tue, 02 Oct 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://hugorocaproyectos.js.org/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Gráficos con D3JS</title>
      <link>https://hugorocaproyectos.js.org/post/2018/10/02/2018-10-02-graficosd3js/</link>
      <pubDate>Tue, 02 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://hugorocaproyectos.js.org/post/2018/10/02/2018-10-02-graficosd3js/</guid>
      <description>D3.js es una biblioteca de JavaScript para manipular documentos basados ​​en datos. D3 te ayuda a dar vida a los datos usando HTML, SVG y CSS.
El énfasis de D3 en los estándares web le brinda todas las capacidades de los navegadores modernos sin vincularse a un marco propietario, combinando poderosos componentes de visualización y un enfoque basado en datos para la manipulación de DOM.
Te dejo algunos ejemplos en GITHUB de como empezar a desarrollar gráficos con datos reales.</description>
    </item>
    
    <item>
      <title>Programación Orientada a Objetos</title>
      <link>https://hugorocaproyectos.js.org/post/2018/09/15/2018-09-15-poo/</link>
      <pubDate>Sat, 15 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://hugorocaproyectos.js.org/post/2018/09/15/2018-09-15-poo/</guid>
      <description>POO es un paradigna de programación que comenzó a desarrollarse en los años 80, en ese momento se dieron cuenta que esta forma de programación facilitaba el desarrollo de sistemas de gran tamaño.
De hecho actualmente este paradigma de programación es el más utilizado, los grandes sistemas que conocemos han sido desarrollados en base a este paradigma.
Las ventajas de poo  Es reutilizable, esto quiero decir que si desarrollamos nuestro código de forma adecuada, las clases y lo que creemos se puede reutilizar, en distintas partes del programa la cual nos va a permitir no duplicar código.</description>
    </item>
    
    <item>
      <title>APP Restaurante</title>
      <link>https://hugorocaproyectos.js.org/post/2018/09/01/2018-09-01-apprestaurante/</link>
      <pubDate>Sat, 01 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://hugorocaproyectos.js.org/post/2018/09/01/2018-09-01-apprestaurante/</guid>
      <description>En estas oportunidad les presento un nuevo sistema de restaurante, cuenta con dos formas de ver, una para los pedidos que se configura dentro del sistema y la otra la parte administrativa.
Contenido  Registro del menú del día Registro de empleados Control de acceso de usuario Cobranza Genera PDF del Cobro Registro de imagenes Vista rápida en dashboard  Paso 1 Puedes obtener el codigo fuente de la siguiente forma:</description>
    </item>
    
    <item>
      <title>Registro de errores con Log4Net</title>
      <link>https://hugorocaproyectos.js.org/post/2018/05/20/2018-05-20-registro-errores-log4net/</link>
      <pubDate>Sun, 20 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://hugorocaproyectos.js.org/post/2018/05/20/2018-05-20-registro-errores-log4net/</guid>
      <description>Si eres un gran desarrollador sabrás que todo software debe de tener un LOG, en esta oportunidad te muestro un aplicativo de como se hace uno.
Paso 1 Crear un proyecto de consola en visual studio
Paso 2 Agregar el siguiente paguete nuget: Paso 3 Agregar una clase a la cual llamaremos LogHelper.cs
namespace Log4Net { public class LogHelper { public static log4net.ILog GetLogger([CallerFilePath]string filename = &amp;quot;&amp;quot;) { return log4net.</description>
    </item>
    
    <item>
      <title>Entity Framework Básico</title>
      <link>https://hugorocaproyectos.js.org/post/2018/05/06/2018-05-06-entityframework/</link>
      <pubDate>Sun, 06 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://hugorocaproyectos.js.org/post/2018/05/06/2018-05-06-entityframework/</guid>
      <description>Una forma mas rápida de realizar CRUD&amp;rsquo;s, a tan solo unos clicks. Este es el poderosisimo Entity Framework
Paso 1 Puedes obtener el codigo fuente de la siguiente forma:
 Clonar ENTITY-FRAMEWORK-BASICO Abrir la solución y explorar el código fuente  Paso 2 Ejecutar lo siguiente en SQLServer
CREATE DATABASE Test GO USE Test GO CREATE TABLE [dbo].[Alumno]( [id] [int] IDENTITY(1,1) NOT NULL, [Nombre] [varchar](50) NOT NULL, [Apellido] [varchar](100) NOT NULL, [Sexo] [int] NOT NULL, [FechaNacimiento] [varchar](10) NOT NULL primary key (id)) GO  Paso 3 Una vez ejecutado el script, abrir el archivo App.</description>
    </item>
    
    <item>
      <title>Scripts SQLServer</title>
      <link>https://hugorocaproyectos.js.org/post/2018/04/29/2018-04-29-scripts-sqlserver/</link>
      <pubDate>Sun, 29 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://hugorocaproyectos.js.org/post/2018/04/29/2018-04-29-scripts-sqlserver/</guid>
      <description>Les comparto algunos scripts que me sirvieron de mucho durante el tiempo que llevo trabajando, y es más aún los sigo usando.
Split -- select * from dbo.[Split](&#39;1,2,3,4,5,6&#39;,&#39;,&#39;) CREATE FUNCTION [dbo].[Split] ( @ItemList NVARCHAR(MAX) ,@delimiter CHAR(1) ) RETURNS @IDTable TABLE ( nro INT identity(1, 1) ,Item VARCHAR(MAX) ) AS BEGIN DECLARE @tempItemList NVARCHAR(MAX) SET @tempItemList = @ItemList DECLARE @i INT DECLARE @Item NVARCHAR(MAX) SET @i = CHARINDEX(@delimiter, @tempItemList) WHILE (LEN(@tempItemList) &amp;gt; 0) BEGIN IF @i = 0 SET @Item = @tempItemList ELSE SET @Item = LEFT(@tempItemList, @i - 1) INSERT INTO @IDTable (Item) VALUES (@Item) IF @i = 0 SET @tempItemList = &#39;&#39; ELSE SET @tempItemList = RIGHT(@tempItemList, LEN(@tempItemList) - @i) SET @i = CHARINDEX(@delimiter, @tempItemList) END RETURN END  Encriptación Recomendado para contraseñas y/o datos sensibles.</description>
    </item>
    
    <item>
      <title>Portafolio Profesional</title>
      <link>https://hugorocaproyectos.js.org/post/2018/04/15/2018-04-15-portafolioproyecto/</link>
      <pubDate>Sun, 15 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://hugorocaproyectos.js.org/post/2018/04/15/2018-04-15-portafolioproyecto/</guid>
      <description>¿Alguna véz haz querido hacer un curriculum profesional usando algo diferente? En esta ocación te traigo el siguiente sistema.
Sistema de administración de portafolio desarrollado en C#, MVC5, Entity Framework, JQuery, Bootstrap. Esta formado en dos partes:
 Lo que se muestra al usuario final (Front) Parte administrable  Edición de datos Registro y edición de estudios Registro y eliminación de hablidades Registro y edición de experiencia Edición de testimonios   Paso 1 Debes de tener instalado visual studio y sqlsever.</description>
    </item>
    
    <item>
      <title>SIGEVEN 2.0</title>
      <link>https://hugorocaproyectos.js.org/post/2018/03/30/2018-03-30-sigenven2.0/</link>
      <pubDate>Fri, 30 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://hugorocaproyectos.js.org/post/2018/03/30/2018-03-30-sigenven2.0/</guid>
      <description>Como dicen, si hay &amp;lsquo;1.0&amp;rsquo; un &amp;lsquo;2.0&amp;rsquo; va haber, en esta oportunidad les muestro otro sistema de ventas mas completo en full PHP con jquery y ajax.
Sistema para el contol de ventas e ingreso de stock, impresion de facturas, boletas y tickets, control de usuarios y permisos. Desarrollado en PHP7, JQuery y la plantilla AdminLTE.
CONTENIDO  Login Dashboard ▾ Almacen/ Registro de artículo Registro de categorías ▾ Compras/ Registro de Ingresos Registro de Proveedor ▾ Ventas/ Registro de Cliente Registro de Ventas ▾ Impresion en PDF/ Factura Boleta ticket ▾ Acceso/ Permisos Registro de usuario Consulta de Compras Consulta de Ventas  Paso 1 Puedes obtener el codigo fuente de la siguiente forma:</description>
    </item>
    
    <item>
      <title>SIGEVEN 1.0</title>
      <link>https://hugorocaproyectos.js.org/post/2018/03/04/2018-03-04-sigenven1.0/</link>
      <pubDate>Sun, 04 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://hugorocaproyectos.js.org/post/2018/03/04/2018-03-04-sigenven1.0/</guid>
      <description>En esta oportunidad les presento un sistema de gestión de ventas para un puesto de ventas, podrás registrar ventas diarias, gastos, ingresos, registro de proveedores e incluso realizar reportes. Desarrollado en AngularJS, PHP y MySql, maquetado con bootstrap.
Paso 1 Puedes obtener el codigo fuente de la siguiente forma:
 Clonar Sigeven 1.0 Copiarlo a un server WAMP, XAMPP o APACHE  Árbol de archivos
▾ App/ ▾ private/ ▾ articulo/ articulo.</description>
    </item>
    
  </channel>
</rss>